//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DSEDiagnosticAnalyticParserConsole.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1000000")]
        public int MaxRowInExcelWorkBook {
            get {
                return ((int)(this["MaxRowInExcelWorkBook"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("500000")]
        public int MaxRowInExcelWorkSheet {
            get {
                return ((int)(this["MaxRowInExcelWorkSheet"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("5000")]
        public int GCFlagThresholdInMS {
            get {
                return ((int)(this["GCFlagThresholdInMS"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10000")]
        public int CompactionFlagThresholdInMS {
            get {
                return ((int)(this["CompactionFlagThresholdInMS"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2000")]
        public int SlowLogQueryThresholdInMS {
            get {
                return ((int)(this["SlowLogQueryThresholdInMS"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("02:00:00")]
        public global::System.TimeSpan LogTimeSpanRange {
            get {
                return ((global::System.TimeSpan)(this["LogTimeSpanRange"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime LogCurrentDate {
            get {
                return ((global::System.DateTime)(this["LogCurrentDate"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-1")]
        public int LogMaxRowsPerNode {
            get {
                return ((int)(this["LogMaxRowsPerNode"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsi=\"http://www.w3." +
            "org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <s" +
            "tring>WARN</string>\r\n  <string>ERROR</string>\r\n</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection LogSummaryIndicatorType {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["LogSummaryIndicatorType"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>SliceQueryFilter.java</string>
  <string>BatchStatement.java</string>
  <string>CompactionController.java</string>
  <string>HintedHandoffMetrics.java</string>
  <string>GCInspector.java</string>
  <string>MessagingService.java</string>
  <string>CompactionTask.java</string>
  <string>RepairSession.java</string>
  <string>SSTableWriter.java</string>
  <string>CqlSlowLogWriter.java</string>
  <string>CqlSolrQueryExecutor.java</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection LogSummaryTaskItems {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["LogSummaryTaskItems"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Collections.Specialized.StringCollection LogSummaryIgnoreTaskExceptions {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["LogSummaryIgnoreTaskExceptions"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LogSummaryPeriods {
            get {
                return ((string)(this["LogSummaryPeriods"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[{\"Item1\":\"1.00:00:00\",\"Item2\":\"00:15:00\"},{\"Item1\":\"1.00:00:00\",\"Item2\":\"1.00:00" +
            ":00\"},{\"Item1\":\"4.00:00:00\",\"Item2\":\"7.00:00:00\"}]")]
        public string LogSummaryPeriodRanges {
            get {
                return ((string)(this["LogSummaryPeriodRanges"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LogExcelWorkbookFilter {
            get {
                return ((string)(this["LogExcelWorkbookFilter"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool LoadLogsIntoExcel {
            get {
                return ((bool)(this["LoadLogsIntoExcel"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".\\dseTemplate.xlsx")]
        public string ExcelTemplateFilePath {
            get {
                return ((string)(this["ExcelTemplateFilePath"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[DeskTop]\\Test.xlsx")]
        public string ExcelFilePath {
            get {
                return ((string)(this["ExcelFilePath"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[MyDocuments]\\LINQPad Queries\\DataStax\\TestData\\HL_Statim_Cluster-diagnostics-201" +
            "6_09_12_14_39_32_UTC")]
        public string DiagnosticPath {
            get {
                return ((string)(this["DiagnosticPath"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool DiagnosticNoSubFolders {
            get {
                return ((bool)(this["DiagnosticNoSubFolders"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ParseLogs {
            get {
                return ((bool)(this["ParseLogs"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ParseNonLogs {
            get {
                return ((bool)(this["ParseNonLogs"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ParseArchivedLogs {
            get {
                return ((bool)(this["ParseArchivedLogs"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string AlternativeLogFilePath {
            get {
                return ((string)(this["AlternativeLogFilePath"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string AlternativeDDLFilePath {
            get {
                return ((string)(this["AlternativeDDLFilePath"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Node Information")]
        public string ExcelWorkSheetRingInfo {
            get {
                return ((string)(this["ExcelWorkSheetRingInfo"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Ring Token Ranges")]
        public string ExcelWorkSheetRingTokenRanges {
            get {
                return ((string)(this["ExcelWorkSheetRingTokenRanges"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("CFStats")]
        public string ExcelWorkSheetCFStats {
            get {
                return ((string)(this["ExcelWorkSheetCFStats"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("NodeStats")]
        public string ExcelWorkSheetNodeStats {
            get {
                return ((string)(this["ExcelWorkSheetNodeStats"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Cassandra Log")]
        public string ExcelWorkSheetLogCassandra {
            get {
                return ((string)(this["ExcelWorkSheetLogCassandra"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DDL Keyspaces")]
        public string ExcelWorkSheetDDLKeyspaces {
            get {
                return ((string)(this["ExcelWorkSheetDDLKeyspaces"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DDL Tables")]
        public string ExcelWorkSheetDDLTables {
            get {
                return ((string)(this["ExcelWorkSheetDDLTables"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Compaction History")]
        public string ExcelWorkSheetCompactionHist {
            get {
                return ((string)(this["ExcelWorkSheetCompactionHist"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Settings-Yamls")]
        public string ExcelWorkSheetYaml {
            get {
                return ((string)(this["ExcelWorkSheetYaml"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("OS-Machine Info")]
        public string ExcelWorkSheetOSMachineInfo {
            get {
                return ((string)(this["ExcelWorkSheetOSMachineInfo"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Cassandra Summary Logs")]
        public string ExcelWorkSheetSummaryLogCassandra {
            get {
                return ((string)(this["ExcelWorkSheetSummaryLogCassandra"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Cassandra Status Logs")]
        public string ExcelWorkSheetStatusLogCassandra {
            get {
                return ((string)(this["ExcelWorkSheetStatusLogCassandra"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>dse_system</string>
  <string>system_auth</string>
  <string>system_traces</string>
  <string>system</string>
  <string>dse_perf</string>
  <string>dse_security</string>
  <string>solr_admin</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection IgnoreKeySpaces {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["IgnoreKeySpaces"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>memory used</string>
  <string>bytes</string>
  <string>space used</string>
  <string>data size</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection CFStatsCreateMBColumns {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["CFStatsCreateMBColumns"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("nodes")]
        public string DiagNodeDir {
            get {
                return ((string)(this["DiagNodeDir"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("nodetool")]
        public string NodetoolDir {
            get {
                return ((string)(this["NodetoolDir"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("dsetool")]
        public string DSEToolDir {
            get {
                return ((string)(this["DSEToolDir"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("logs")]
        public string LogsDir {
            get {
                return ((string)(this["LogsDir"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("ring")]
        public string NodetoolRingFile {
            get {
                return ((string)(this["NodetoolRingFile"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("ring")]
        public string DSEtoolRingFile {
            get {
                return ((string)(this["DSEtoolRingFile"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cfstats")]
        public string NodetoolCFStatsFile {
            get {
                return ((string)(this["NodetoolCFStatsFile"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("tpstats")]
        public string NodetoolTPStatsFile {
            get {
                return ((string)(this["NodetoolTPStatsFile"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("info")]
        public string NodetoolInfoFile {
            get {
                return ((string)(this["NodetoolInfoFile"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("compactionhistory")]
        public string NodetoolCompactionHistFile {
            get {
                return ((string)(this["NodetoolCompactionHistFile"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("system")]
        public string LogCassandraSystemLogFile {
            get {
                return ((string)(this["LogCassandraSystemLogFile"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("system.log*")]
        public string LogCassandraSystemLogFileArchive {
            get {
                return ((string)(this["LogCassandraSystemLogFileArchive"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".\\conf\\cassandra")]
        public string ConfCassandraDir {
            get {
                return ((string)(this["ConfCassandraDir"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cassandra.yaml")]
        public string ConfCassandraFile {
            get {
                return ((string)(this["ConfCassandraFile"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cassandra")]
        public string ConfCassandraType {
            get {
                return ((string)(this["ConfCassandraType"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".\\conf\\dse")]
        public string ConfDSEDir {
            get {
                return ((string)(this["ConfDSEDir"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("dse.yaml")]
        public string ConfDSEYamlFile {
            get {
                return ((string)(this["ConfDSEYamlFile"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("dse yaml")]
        public string ConfDSEYamlType {
            get {
                return ((string)(this["ConfDSEYamlType"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("dse")]
        public string ConfDSEType {
            get {
                return ((string)(this["ConfDSEType"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("dse")]
        public string ConfDSEFile {
            get {
                return ((string)(this["ConfDSEFile"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".\\cqlsh\\describe_schema")]
        public string CQLDDLDirFile {
            get {
                return ((string)(this["CQLDDLDirFile"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("*.cql\"")]
        public string CQLDDLDirFileExt {
            get {
                return ((string)(this["CQLDDLDirFileExt"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>java_heap.json</string>
  <string>java_system_properties.json</string>
  <string>machine-info.json</string>
  <string>os-info.json</string>
  <string>.\os-metrics\cpu.json</string>
  <string>.\os-metrics\load_avg.json</string>
  <string>.\os-metrics\memory.json</string>
  <string>.\ntp\ntpstat</string>
  <string>.\ntp\ntptime</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection OSMachineFiles {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["OSMachineFiles"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".\\opscenterd")]
        public string OPSCenterDir {
            get {
                return ((string)(this["OPSCenterDir"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsi=\"http://www.w3." +
            "org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <s" +
            "tring>node_info.json</string>\r\n  <string>repair_service.json</string>\r\n</ArrayOf" +
            "String>")]
        public global::System.Collections.Specialized.StringCollection OPSCenterFiles {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["OPSCenterFiles"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".\\cassandra\\system.log")]
        public string LogCassandraDirSystemLog {
            get {
                return ((string)(this["LogCassandraDirSystemLog"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("tablehistogram")]
        public string TableHistogramFileName {
            get {
                return ((string)(this["TableHistogramFileName"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("TableHistogram")]
        public string ExcelCFHistogramWorkSheet {
            get {
                return ((string)(this["ExcelCFHistogramWorkSheet"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("cfhistogram")]
        public string CFHistogramFileName {
            get {
                return ((string)(this["CFHistogramFileName"]));
            }
        }
    }
}
